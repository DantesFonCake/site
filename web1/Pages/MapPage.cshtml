@page "/map"
@model SinglePage<MapPage>
@{
    ViewData["Title"] = !string.IsNullOrEmpty(Model.Data.MetaTitle) ? Model.Data.MetaTitle : Model.Data.Title;
}
@section head {
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous" />
    <link rel="stylesheet" href="~/assets/css/svg.min.css">
    @WebApp.MetaTags(Model.Data)
}

<header>
    <div class="dimmer"></div>
    <div class="container text-center">
        <h3>@Model.Data.Title</h3>
    </div>
</header>

<main>
    <div id="popup-modal">
        <div class="modal fade" id="modal">
            <div class="modal-dialog modal-dialog-centered modal-xl">
                <div id="popup-content" class="modal-content">
                    <div class="modal-body" id="popup-modal-body">
                        <img src="~/assets/statics/img/loading.gif" width="50" class="rounded mx-auto d-block" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="block">
        <div class="container dropdown" id="map-container">
            @if (Model.Data.Buildings.Any())
            {
                <div class="btn-group dropleft" id="map-dropdown">
                    <button type="button" class="btn-sm btn-dark dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Здания
                    </button>
                    <div class="dropdown-menu dropdown-menu-right">
                        @foreach (var building in Model.Data.Buildings)
                        {
                            if (string.IsNullOrWhiteSpace(building.SvgId.Value) || string.IsNullOrWhiteSpace(building.HumanName.Value))
                                continue;
                            <a id="@building.SvgId.Value" class="map-button dropdown-item">@building.HumanName.Value</a>
                        }
                    </div>
                </div>
            }
            @{var file = Environment.WebRootFileProvider.GetFileInfo("/assets/statics/img/map.svg"); }
            @Html.Raw(file.Exists ? System.IO.File.ReadAllText(file.PhysicalPath) : "Произошла ошибка: карта не найдена")
            <div class="map-controls">
                <button class="btn-primary" id="map-pan"><i class="fas fa-arrows-alt"></i></button>
                <button class="btn-primary" id="map-minus"><i class="fas fa-minus"></i></button>
                <input type="range" orient="vertical" min="1" max="2" step="0.1" value="1" id="map-zoom" />
                <button class="btn-primary" id="map-plus"><i class="fas fa-plus"></i></button>
            </div>
        </div>
    </div>
</main>

@section scripts {
    @*<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" 
            integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" 
            crossorigin="anonymous"></script>*@
    <script src="https://unpkg.com/@@panzoom/panzoom@4.4.2/dist/panzoom.min.js"></script>
    <script type="text/javascript" src="~/assets/js/panzoom.min.js"></script>
    <script id="temporary" type="application/json">
        @Json.Serialize(Model.Data.Buildings
                         .Where(x=>!string.IsNullOrWhiteSpace(x.SvgId.Value)&&!string.IsNullOrWhiteSpace(x.HumanName.Value))
                         .ToDictionary(x => x.SvgId.Value, x => new { postid = x.Post.Id, title = x.HumanName.Value }))
    </script>
    <script type="text/javascript" src="~/assets/js/svg.min.js"></script>
    <script src="~/assets/js/post-popup.min.js"></script>
}
